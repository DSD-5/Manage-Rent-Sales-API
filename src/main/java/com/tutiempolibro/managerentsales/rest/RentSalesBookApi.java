/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.16-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.tutiempolibro.managerentsales.rest;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.tutiempolibro.managerentsales.service.IManageRentSalesService;
import com.tutiempolibro.managerentsales.types.SummaryPurchaseType;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-11-03T12:20:16.232-05:00")

@Api(value = "rentSalesBook", description = "the rentSalesBook API")
@RestController
@RequestMapping(value = "/v1/rent-sales")
public class RentSalesBookApi {
    
    @Autowired
    private IManageRentSalesService manageRentSalesService; 

    @ApiOperation(value = "Sales or Rent of Book", nickname = "rentSalesBook", notes = "", response = SummaryPurchaseType.class, responseContainer = "List", tags = {
	    "rentSalesBook", })
    @ApiResponses(value = {
	    @ApiResponse(code = 200, message = "List of items shopping cart", response = SummaryPurchaseType.class, responseContainer = "List") })
    @PostMapping(value = "/rentSalesBook", produces = { "application/json" })
    SummaryPurchaseType rentSalesBook(
	    @NotNull @ApiParam(value = "Suscription ID Client", required = true) @Valid @RequestParam(value = "suscriptionId", required = true) Integer suscriptionId,
	    @NotNull @ApiParam(value = "ShoppingCart ID ", required = true) @Valid @RequestParam(value = "shoppingId", required = true) Integer shoppingId,
	    @NotNull @ApiParam(value = "Delivery ID", required = true) @Valid @RequestParam(value = "deliveryId", required = true) Integer deliveryId,
	    @NotNull @ApiParam(value = "delivery Adress", required = true) @Valid @RequestParam(value = "direction", required = true) String direction,
	    @NotNull @ApiParam(value = "reference value", required = true) @Valid @RequestParam(value = "reference", required = true) String reference,
	    @NotNull @ApiParam(value = "preview = true --> Show Detail whitout process sale / preview = false --> process the sales with state processed", required = true) @Valid @RequestParam(value = "preview", required = true) Boolean preview,
	    @ApiParam(value = "Identifier for the system originating the request") @RequestHeader(value = "Application", required = false) String application,
	    @ApiParam(value = "Including the proof of access (using OAuth2.0 security model) to guarantee that the consumer has privileges to access the entity database") @RequestHeader(value = "Authorization", required = false) String authorization) throws Exception{
	
	return manageRentSalesService.rentSalesBook(suscriptionId, shoppingId, deliveryId, direction, reference, preview, authorization);
    }

}
